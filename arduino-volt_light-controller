/*
 Created by Kevin Brannigan
 Arduino Voltage / AMP meter with LCD, Ethernet connection and Relay controler
 Purpose is to turn on / off devices / switch power control from solar to mains based in voltage and amps
 Connectivity is provided via Ethernet / IP address and Displayed on LCD including Bar graph
 Origional LCD pins //LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
*/

#include <SPI.h>
#include <Ethernet.h> 
#include <LiquidCrystal.h>
#include <LcdBarGraph.h>


const int numReadings = 5;    //number of units to get the average
float readings[numReadings];  // the readings from the analog input

int index     = 0;            // the index of the current reading
float total   = 0;            // the running total
float average = 0;            // the average

//Init LCD and Graph
LiquidCrystal lcd(26, 27, 25, 24, 23, 22);
LcdBarGraph lbg(&lcd,6,10,1);  

//Init Relays
int MotorControl1 = 5;
int MotorControl2 = 4;
int MotorControl3 = 6;
int MotorControl4 = 7;

//Init Power LED
int led = 13;
int led1 = 28;
int led2 = 29;
int led3 = 30;
int led4 = 31;
int led5 = 32;


//Init VOltage Divider
float vPow = 4.795;       //Set ARDUINO usb voltage
float r1   = 20000;       //Used 2 x 10k resistors here because I didnt have a 20k
float r2   = 10100;       //Standard 10k resistor used  

//Init Ethernet IP
byte mac[]     = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };   //physical mac address
byte ip[]      = { 192, 168, 1, 178 };                     // ip in lan (that's what you need to use in your browser. ("192.168.1.178")
byte gateway[] = { 192, 168, 1, 1 };                       // internet access via router
byte subnet[]  = { 255, 255, 255, 0 };                     //subnet mask
EthernetServer server(80);                                 //server port     
String readString;


void setup() {
  
  //Turn on Power LED
  pinMode(led, OUTPUT);
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(led3, OUTPUT);
  pinMode(led4, OUTPUT);
  pinMode(led5, OUTPUT);
  digitalWrite(led,  LOW);   //Load 1 - first light under screen
  digitalWrite(led1, LOW);   //Load 4 - 4th light under screen
  digitalWrite(led2, LOW);   //Load 3 - 3rd light under screen
  digitalWrite(led3, LOW);   //Load 2 - 2nd Light under screen
  digitalWrite(led4, LOW);   //Ethernet light
  
  //Turn Power Light ON
  digitalWrite(led5, HIGH);   //Power Light
  
  //zero the average
  for (int thisReading = 0; thisReading < numReadings; thisReading++)
  readings[thisReading] = 0;       
    
  // Startethernet
  Ethernet.begin(mac, ip, gateway, subnet);
  server.begin();
  
  //setup relay control
  pinMode(MotorControl1, OUTPUT);
  pinMode(MotorControl2, OUTPUT);
  pinMode(MotorControl3, OUTPUT);
  pinMode(MotorControl4, OUTPUT);
  digitalWrite(MotorControl1,LOW);
  digitalWrite(MotorControl2,LOW);
  digitalWrite(MotorControl3,LOW);
  digitalWrite(MotorControl4,LOW);
  
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
 
  //Display LCD information
  lcd.begin(16, 2);
  lcd.setCursor(0, 0       );                 //Set row0 column0 on LCD
  lcd.print("Max Voltage " );                 //Print to the LCD
  lcd.print((int)(vPow / (r2 / (r1 + r2))));  //Print the Voltage to the LCD
  lcd.print("V"            );                 //Print to the LCD                   
  delay(2000);
  
  //Debuig Serial
  Serial.println("--------------------"); 
  Serial.print("DC Maximum Voltage: ");
  Serial.print((int)(vPow / (r2 / (r1 + r2))));
  Serial.println("V");
  Serial.println("--------------------");
  Serial.println(Ethernet.localIP());
  Serial.println("");
  lcd.begin(2, 16);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("IP:");
  lcd.print(Ethernet.localIP());
  delay(100);
}


void loop() {
  
  //do voltage calculation
  float v = (analogRead(11) * vPow) / 1024.0;
  float v2 = v / (r2 / (r1 + r2));
  
  //Do Average Calc
  total= total - readings[index];  // subtract the last reading:       
  readings[index] = v2;            // read from the sensor: 
  total= total + readings[index];  // add the reading to the total:    
  index = index + 1;               // advance to the next position in the array:                 
  if (index >= numReadings)        // if we're at the end of the array...       
    index = 0;                     // ...wrap around to the beginning:             
  average = total / numReadings;     
  
  //print the average volts to lcd  
  lcd.setCursor(0, 1);
  lcd.print(average);
  lcd.print("v ");
  
  //get the current battery % based on Volts
  float volt = v2;
  int percent = ((volt-10.50)/3.75) * 100;
  float percent_float = ((volt-10.50)/3.75) * 100;
  
  //print % to LCD and bar graph
  lcd.print(percent);
  lcd.print("%");
  Serial.print(percent);
  Serial.println("%");
  lcd.setCursor(0, 1);
  //lbg.drawValue( analogRead(0), 2048);
  lbg.drawValue( percent_float, 100); 
  delay(100);
  
  // Create a client connection ethernet
  EthernetClient client = server.available();
  if (client) {
    while (client.connected()) {   
      if (client.available()) {
        digitalWrite(led4, HIGH);
        delay(2);
        digitalWrite(led4, LOW);
        delay(2);
        char c = client.read();  
        //read char by char HTTP request
        if (readString.length() < 100) {
          //store characters to string
          readString += c;
          Serial.print(c);
          digitalWrite(led4, HIGH);
          delay(2);
          digitalWrite(led4, LOW);
          delay(2);
         }
         //if HTTP request has ended
         if (c == '\n') {          
           //Serial.println(readString); //print to serial monitor for debuging
           digitalWrite(led4, HIGH);
           delay(2);
           digitalWrite(led4, LOW);
           delay(2);
           client.println("HTTP/1.1 200 OK"); //send new page
           client.println("Content-Type: text/html");
           client.println();     
           client.println("<HTML>");
           client.println("<HEAD>");
           client.println("<meta name='apple-mobile-web-app-capable' content='yes' />");
           client.println("<meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' />");
           client.println("<link rel='stylesheet' type='text/css' href='http://randomnerdtutorials.com/ethernetcss.css' />");
           client.println("<TITLE>Arduino Web Voltage Meter</TITLE>");
           client.println("</HEAD>");
           client.println("<BODY>");
           client.println("<H1>Arduino Wind-Turbine Voltage Monitor - Network Enabled</H1>");
           client.println("<hr />");
           client.println("<br />");  
           client.println("<H1>Relay Controls</H1>");
           client.println("<a href=\"/?button1on\"\"> Reset Arduino...</a>");
           client.println("<a href=\"/?button1off\"\">Turn Off LED'S..</a><br />");   
           client.println("<br />");    
           client.println("<a href=\"/?button2on\"\"> Turn On  Relay 1</a>");
           client.println("<a href=\"/?button2off\"\">Turn Off Relay 1</a><br />");  
           client.println("<br />");    
           client.println("<a href=\"/?button3on\"\"> Turn On  Relay 2</a>");
           client.println("<a href=\"/?button3off\"\">Turn Off Relay 2</a><br />");  
           client.println("<br />");    
           client.println("<a href=\"/?button4on\"\"> Turn On  Relay 3</a>");
           client.println("<a href=\"/?button4off\"\">Turn Off Relay 3</a><br />");  
           client.println("<br />"); 
           client.println("<a href=\"/?button5on\"\"> Turn On  Relay 4</a>");
           client.println("<a href=\"/?button5off\"\">Turn Off Relay 4</a><br />");  
           client.println("<br />"); 
           client.println("<br />");
           client.println("<br />"); 
           client.println("<br />");
           client.println("<H1>Battery Status</H1>");
           client.println("<a href=\"/?button6on\"\">Current Volatge:</a>");
           client.println("<H2>");
           client.println(v2);
           client.println("</H2>");  
            client.println("<br />");
           client.println("<a href=\"/?button7on\"\">Battery Charge:</a>");
           client.println("<H1>");
           client.println(percent);
           client.println("%");
           client.println("</H1>");  
           client.println("<META HTTP-EQUIV=refresh CONTENT=8>");
           client.println("<br />"); 
           client.println("</BODY>");
           client.println("</HTML>");
           delay(1);
           //stopping client
           client.stop();
           //controls the Arduino if you press the buttons
           if (readString.indexOf("?button1on") >0){
               digitalWrite(13, LOW);    // turn the LED on (HIGH is the voltage level)
               delay(2000);              // wait for a second
               digitalWrite(13, HIGH);   // turn the LED off by making the voltage LOW
               delay(1000);              // wait for a second
               digitalWrite(13, LOW);    // turn the LED on (HIGH is the voltage level)
               delay(2000);              // wait for a second
               digitalWrite(13, HIGH);   // turn the LED off by making the voltage LOW
               delay(1000);              // wait for a second
               software_Reset();      
           }
           if (readString.indexOf("?button1off") >0){
                  digitalWrite(led,  LOW);   //Load 1 - first light under screen
                  digitalWrite(led1, LOW);   //Load 4 - 4th light under screen
                  digitalWrite(led2, LOW);   //Load 3 - 3rd light under screen
                  digitalWrite(led3, LOW);   //Load 2 - 2nd Light under screen
                  digitalWrite(led4, LOW);   //Ethernet light
           }
          if (readString.indexOf("?button2on") >0){
               digitalWrite(MotorControl1,HIGH);
               digitalWrite(led,  HIGH);
               vPow = 4.775;
          }
          if (readString.indexOf("?button2off") >0){
               digitalWrite(MotorControl1,LOW);
               digitalWrite(led,  LOW);
               vPow = 4.795;
           }
          if (readString.indexOf("?button3on") >0){
               digitalWrite(MotorControl2,HIGH);
               digitalWrite(led3,  HIGH);
               vPow = 4.775;
          }
          if (readString.indexOf("?button3off") >0){
               digitalWrite(MotorControl2,LOW);
               digitalWrite(led3,  LOW);
               vPow = 4.795;
           }       
          if (readString.indexOf("?button4on") >0){
               digitalWrite(MotorControl3,HIGH);
               digitalWrite(led2,  HIGH);
               vPow = 4.775;
          }
          if (readString.indexOf("?button4off") >0){
               digitalWrite(MotorControl3,LOW);
               digitalWrite(led2,  LOW);
               vPow = 4.795;
           }       
          if (readString.indexOf("?button5on") >0){
               digitalWrite(MotorControl4,HIGH);
               digitalWrite(led1,  HIGH);
               vPow = 4.775;
          }
          if (readString.indexOf("?button5off") >0){
               digitalWrite(MotorControl4,LOW);
               digitalWrite(led1,  LOW);
               vPow = 4.795;
           }              
            //clearing string for next read
            readString="";            
         }
       }
    }
}
Serial.println(average);
delay(200);
}

void software_Reset() // Restarts program from beginning but does not reset the peripherals and registers
{
asm volatile ("  jmp 0");  
}  
